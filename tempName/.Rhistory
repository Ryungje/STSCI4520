# Interactive panels
navset_card_underline(
nav_panel("Work in Progress",
tabPanel("Data Categories", tableOutput("basic")
),
),
nav_panel("Top Distributors", plotOutput("dist")),
nav_panel("Biggest Budgets", plotOutput("budget")),
),
nav_spacer(),
nav_menu(
title = "Links",
align = "right",
# Links to source data
nav_item(tags$a("2023 Domestic Box Office", href = "https://www.boxofficemojo.com/year/2023/?ref_=bo_yl_table_2")),
nav_item(tags$a("Supplemental Data", href = "https://www.the-numbers.com/market/2023/top-grossing-movies"))
),
fluid=TRUE
)
server <- function(input, output) {
## Shiny App Server Controls
output$basic <- renderTable(
plotBasic(input$thisvar)
)
output$dist <- renderPlot(
plotDistributor(input$thisvar)
)
}
shinyApp(ui, server)
# Import movie data
load("movies.RData")
load("simple_movies.RData")
# Plotting functions for use in Server Controls
library("shiny")
library("ggplot2")
library("bslib")
plotDistributor = function(plotthis) {
## Plotting top 10 Movie Distributors
# sort top Distributors
temp <- tail(sort(table(movies$Distributor), decreasing=FALSE), n=10)
temp <- data.frame(temp)
names(temp) <- c("Distributor", "Movies_Released")
# plot box plot
ggplot(data=temp, aes(Distributor, Movies_Released)) + geom_col() + coord_flip()
}
plotBasic = function(plotthis){
simple_movies
}
# Shiny App
# Shiny App UI
ui <- page_navbar(
title = "Top Grossing Movies of 2023",
inverse = TRUE,
# Interactive panels
navset_card_underline(
nav_panel("Work in Progress",
tabPanel("", dataTableOutput("basic")
),
),
nav_panel("Top Distributors", plotOutput("dist")),
nav_panel("Biggest Budgets", plotOutput("budget")),
),
nav_spacer(),
nav_menu(
title = "Links",
align = "right",
# Links to source data
nav_item(tags$a("2023 Domestic Box Office", href = "https://www.boxofficemojo.com/year/2023/?ref_=bo_yl_table_2")),
nav_item(tags$a("Supplemental Data", href = "https://www.the-numbers.com/market/2023/top-grossing-movies"))
),
fluid=TRUE
)
server <- function(input, output) {
## Shiny App Server Controls
output$basic <- DT::renderDT(
plotBasic(input$thisvar)
)
output$dist <- renderPlot(
plotDistributor(input$thisvar)
)
}
shinyApp(ui, server)
library("DT")
temp <- parse_data("Release_Date")
temp
parse_data <- function(category){
## Parse movie data for individual categories
# Create new data frame with each movie title and empty column
movie_titles <- unique(movies$Movie)
movie_category <- data.frame(Movie=movie_titles)
movie_category <- cbind(movie_category, NA)
names(movie_category) <- c("Movie", category)
# Fill in data for each movie for given category
for (i in 1:length(movies$Movie)){
n <- which(movie_category$Movie == movies$Movie[i])
# See if this movie title has category data already
if (category == "Release_Date" && is.na(movie_category[[category]][n])) {
movie_category[[category]][n] <- as.Date(movies[[category]][i])
}
else if ( is.na(movie_category[[category]][n])){
movie_category[[category]][n] <- movies[[category]][i]
}
}
return(movie_category)
}
# Average Running Time
mean(unique(movies$Running_Time))
temp <- parse_data("Release_Date")
View(temp)
View(temp)
# Shiny App
# Shiny App UI
ui <- page_navbar(
title = "Top Grossing Movies of 2023",
inverse = TRUE,
# Interactive panels
navset_card_underline(
nav_panel("Basic Movie Information",
tabPanel("", DT::DTOutput("basic")
),
),
nav_panel("Top Distributors", plotOutput("dist")),
nav_panel("Biggest Budgets", plotOutput("budget")),
),
nav_spacer(),
nav_menu(
title = "Links",
align = "right",
# Links to source data
nav_item(tags$a("2023 Domestic Box Office", href = "https://www.boxofficemojo.com/year/2023/?ref_=bo_yl_table_2")),
nav_item(tags$a("Supplemental Data", href = "https://www.the-numbers.com/market/2023/top-grossing-movies"))
),
fluid=TRUE
)
server <- function(input, output) {
## Shiny App Server Controls
output$basic <- DT::renderDT(
plotBasic(input$thisvar)
)
output$dist <- renderPlot(
plotDistributor(input$thisvar)
)
}
shinyApp(ui, server)
# Shiny App
# Shiny App UI
ui <- page_navbar(
title = "Top Grossing Movies of 2023",
inverse = TRUE,
# Interactive panels
navset_card_underline(
nav_panel("Basic Movie Information",
tabPanel("", DT::DTOutput("basic")
),
),
nav_panel("Top Distributors", plotOutput("dist")),
nav_panel("Biggest Budgets", plotOutput("budget")),
),
nav_spacer(),
nav_menu(
title = "Links",
align = "right",
# Links to source data
nav_item(tags$a("2023 Domestic Box Office", href = "https://www.boxofficemojo.com/year/2023/?ref_=bo_yl_table_2")),
nav_item(tags$a("Supplemental Data", href = "https://www.the-numbers.com/market/2023/top-grossing-movies"))
),
nav_menu(
title = "Authors",
align = "right",
nav_item("James")
),
fluid=TRUE
)
server <- function(input, output) {
## Shiny App Server Controls
output$basic <- DT::renderDT(
plotBasic(input$thisvar)
)
output$dist <- renderPlot(
plotDistributor(input$thisvar)
)
}
shinyApp(ui, server)
# Shiny App
# Shiny App UI
ui <- page_navbar(
title = "Top Grossing Movies of 2023",
inverse = TRUE,
# Interactive panels
navset_card_underline(
nav_panel("Basic Movie Information",
tabPanel("", DT::DTOutput("basic")
),
),
nav_panel("Top Distributors", plotOutput("dist")),
nav_panel("Biggest Budgets", plotOutput("budget")),
),
nav_spacer(),
nav_menu(
title = "Links",
align = "right",
# Links to source data
nav_item(tags$a("2023 Domestic Box Office", href = "https://www.boxofficemojo.com/year/2023/?ref_=bo_yl_table_2")),
nav_item(tags$a("Supplemental Data", href = "https://www.the-numbers.com/market/2023/top-grossing-movies"))
),
nav_menu(
title = "Authors",
align = "right",
nav_item("Ilona Khimey"),
nav_item("James Chun"),
nav_item("Andrew Zhang")
),
fluid=TRUE
)
server <- function(input, output) {
## Shiny App Server Controls
output$basic <- DT::renderDT(
plotBasic(input$thisvar)
)
output$dist <- renderPlot(
plotDistributor(input$thisvar)
)
}
shinyApp(ui, server)
# Shiny App
# Shiny App UI
ui <- page_navbar(
title = "Top Grossing Movies of 2023",
inverse = TRUE,
# Interactive panels
navset_card_underline(
nav_panel("Basic Movie Information",
tabPanel("", DT::DTOutput("basic")
),
),
nav_panel("Top Distributors", plotOutput("dist")),
nav_panel("Biggest Budgets", plotOutput("budget")),
),
nav_spacer(),
nav_menu(
title = "Links",
align = "right",
# Links to source data
nav_item(tags$a("2023 Domestic Box Office", href = "https://www.boxofficemojo.com/year/2023/?ref_=bo_yl_table_2")),
nav_item(tags$a("Supplemental Data", href = "https://www.the-numbers.com/market/2023/top-grossing-movies"))
),
nav_menu(
title = "Authors",
align = "right",
nav_item(" Ilona Khimey"),
nav_item(" James Chun"),
nav_item(" Andrew Zhang")
),
fluid=TRUE
)
server <- function(input, output) {
## Shiny App Server Controls
output$basic <- DT::renderDT(
plotBasic(input$thisvar)
)
output$dist <- renderPlot(
plotDistributor(input$thisvar)
)
}
shinyApp(ui, server)
library("shiny")
library("ggplot2")
library("bslib")
library("DT")
# Import movie data
load("movies.RData")
load("simple_movies.RData")
# Plotting functions for use in Server Controls
plotDistributor = function(plotthis) {
## Plotting top 10 Movie Distributors
# sort top Distributors
temp <- tail(sort(table(movies$Distributor), decreasing=FALSE), n=10)
temp <- data.frame(temp)
names(temp) <- c("Distributor", "Movies_Released")
# plot box plot
ggplot(data=temp, aes(Distributor, Movies_Released)) + geom_col() + coord_flip()
}
plotBasic = function(plotthis){
simple_movies
}
plotBudget = function(plotthis){
tail(sort(table(simple_movies$Budget), decreasing=FALSE), n=10)
}
# Shiny App
# Shiny App UI
ui <- page_navbar(
title = "Top Grossing Movies of 2023",
inverse = TRUE,
# Interactive panels
navset_card_underline(
nav_panel("Basic Movie Information",
tabPanel("", DTOutput("basic")
),
),
nav_panel("Top Distributors", plotOutput("dist")),
nav_panel("Biggest Budgets", plotOutput("budget")),
),
nav_spacer(),
nav_menu(
title = "Links",
align = "right",
# Links to source data
nav_item(tags$a("2023 Domestic Box Office", href = "https://www.boxofficemojo.com/year/2023/?ref_=bo_yl_table_2")),
nav_item(tags$a("Supplemental Data", href = "https://www.the-numbers.com/market/2023/top-grossing-movies"))
),
nav_menu(
title = "Authors",
align = "right",
nav_item("Ilona Khimey"),
nav_item("James Chun"),
nav_item("Andrew Zhang")
),
fluid=TRUE
)
server <- function(input, output) {
## Shiny App Server Controls
output$basic <- renderDT(
plotBasic(input$thisvar)
)
output$dist <- renderPlot(
plotDistributor(input$thisvar)
)
output$budget <- renderDT(
plotBudget(input$thisvar)
)
}
shinyApp(ui, server)
library("shiny")
library("ggplot2")
library("bslib")
library("DT")
# Import movie data
load("movies.RData")
load("simple_movies.RData")
# Plotting functions for use in Server Controls
plotDistributor = function(plotthis) {
## Plotting top 10 Movie Distributors
# sort top Distributors
temp <- tail(sort(table(movies$Distributor), decreasing=FALSE), n=10)
temp <- data.frame(temp)
names(temp) <- c("Distributor", "Movies_Released")
# plot box plot
ggplot(data=temp, aes(Distributor, Movies_Released)) + geom_col() + coord_flip()
}
plotBasic = function(plotthis){
simple_movies
}
# Shiny App
# Shiny App UI
ui <- page_navbar(
title = "Top Grossing Movies of 2023",
inverse = TRUE,
# Interactive panels
navset_card_underline(
nav_panel("Basic Movie Information",
tabPanel("", DTOutput("basic")
),
),
nav_panel("Top Distributors", plotOutput("dist")),
),
nav_spacer(),
nav_menu(
title = "Links",
align = "right",
# Links to source data
nav_item(tags$a("2023 Domestic Box Office", href = "https://www.boxofficemojo.com/year/2023/?ref_=bo_yl_table_2")),
nav_item(tags$a("Supplemental Data", href = "https://www.the-numbers.com/market/2023/top-grossing-movies"))
),
nav_menu(
title = "Authors",
align = "right",
nav_item("Ilona Khimey"),
nav_item("James Chun"),
nav_item("Andrew Zhang")
),
fluid=TRUE
)
server <- function(input, output) {
## Shiny App Server Controls
output$basic <- renderDT(
plotBasic(input$thisvar)
)
output$dist <- renderPlot(
plotDistributor(input$thisvar)
)
}
shinyApp(ui, server)
library("shiny")
library("ggplot2")
library("bslib")
library("DT")
# Import movie data
load("movies.RData")
load("simple_movies.RData")
# Plotting functions for use in Server Controls
plotDistributor = function(plotthis) {
## Plotting top 10 Movie Distributors
# sort top Distributors
temp <- tail(sort(table(movies$Distributor), decreasing=FALSE), n=10)
temp <- data.frame(temp)
names(temp) <- c("Distributor", "Movies_Released")
# plot box plot
ggplot(data=temp, aes(Distributor, Movies_Released)) + geom_col() + coord_flip()
}
plotBasic = function(plotthis){
simple_movies
}
# Shiny App
# Shiny App UI
ui <- page_navbar(
title = "Top Grossing Movies of 2023",
inverse = TRUE,
# Interactive panels
navset_card_underline(
nav_panel("Basic Movie Information",
tabPanel("", DTOutput("basic")
),
),
nav_panel("Top Distributors", plotOutput("dist")),
),
nav_spacer(),
nav_menu(
title = "Links",
align = "right",
# Links to source data
nav_item(tags$a("2023 Domestic Box Office", href = "https://www.boxofficemojo.com/year/2023/?ref_=bo_yl_table_2")),
nav_item(tags$a("Supplemental Data", href = "https://www.the-numbers.com/market/2023/top-grossing-movies"))
),
nav_menu(
title = "Authors",
align = "right",
nav_item("Ilona Khimey"),
nav_item("James Chun"),
nav_item("Andrew Zhang")
),
fluid=TRUE
)
server <- function(input, output) {
## Shiny App Server Controls
output$basic <- renderDT(
plotBasic(input$thisvar)
)
output$dist <- renderPlot(
plotDistributor(input$thisvar)
)
}
shinyApp(ui, server)
load("Daily_Dataset.RData")
setwd("~/CLASSES/STSCI_4520/Final Project")
load("Daily_Dataset.RData")
View(data)
View(data)
View(data)
View(data)
devtools::load_all()
install.packages(devtools)
install.packages("devtools")
devtools::load_all()
devtools::load_all()
devtools::load_all()
setwd("~/CLASSES/STSCI_4520/Final Project/tempName")
devtools::load_all()
?get_time_series
install.packages("tempName")
?get_time_series
??get_time_series
devtools::document()
?get_time_series
get_time_series(data, "NC_Asheville_13_S")
test <- get_time_series(data, "NC_Asheville_13_S")
test
View(test)
View(test)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
expect_equal(
length(test$WBANNO),
length(test$WBANNO)
)
length(test$WBANNO)
devtools::test()
devtools::load_all() #to load in package
devtools::test()
load("Daily_Dataset.RData")
setwd("~/CLASSES/STSCI_4520/Final Project/tempName")
load("Daily_Dataset.RData")
getwd()
load(paste0(getwd(),"tests/testthat/Daily_Dataset.RData"))
paste0(getwd(),"tests/testthat/Daily_Dataset.RData")
load(paste0(getwd(),"/tests/testthat/Daily_Dataset.RData"))
Daily_Dataset
devtools::load_all() #to load in package
devtools::test()
load(paste0(getwd(),"/tests/testthat/test_data.RData"))
load("test_data.RData")
setwd(paste0(getwd(),"/tests/testthat)"))
data()
data("tempName")
data(package="tempName")
devtools::load_all() #to load in package
data(package="temporary")
devtools::load_all() #to load in package
daily_weather::Daily_Dataset
daily_weather::data
devtools::test()
